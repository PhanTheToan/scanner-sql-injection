# data/api_endpoints.yaml

- path: "/api/get_user.php"       
  method: "GET"                   
  params_in: "query"              
  params_to_test: ["id", "user_id"]
- path: "/api/update_user"
  method: "POST"
  params_in: "body_json"
  params_to_test: ["userId", "email", "profile.description"]
  json_template: 
    userId: 1
    name: "Test User"
    email: "test@example.com"
    profile:
      description: "Default description"
      isActive: true

- path: "/api/search_items"
  method: "POST"
  params_in: "body_form"
  params_to_test: ["query", "category_id"]




- path: "/api/v1/products/{product_id}" 
  method: "PUT"
  params_in: "body_json"
  params_to_test: ["name", "description", "price_details.amount", "supplier_info.id"]
  json_template:
    name: "Updated Product Name"
    description: "Updated description."
    price_details:
      amount: 99.99
      currency: "USD"
    stock: 100
    supplier_info:
      id: "SUP-001"
      name: "Main Supplier"


- path: "/api/v1/items" # Ví dụ: /api/v1/items?itemId=XYZ123&cascade=true
  method: "DELETE"
  params_in: "query"
  params_to_test: ["itemId", "user_token", "filter"]

- path: "/graphql"
  method: "POST"
  params_in: "body_json"

  params_to_test:
    - "variables.userId"
    - "variables.searchTerm"
    - "variables.commentData.text" # Ví dụ trường lồng nhau trong variables
  json_template:
    query: |
      query GetUserData($userId: ID!, $searchTerm: String) {
        user(id: $userId) {
          id
          name
          posts(search: $searchTerm) {
            title
            content
          }
        }
      }
      mutation AddComment($commentData: CommentInput!) {
        addComment(data: $commentData) {
          id
          text
        }
      }
    variables: 
      userId: "1" 
      searchTerm: "example" 
      commentData:
        postId: "post123"
        text: "Original comment text" 
- path: "/xmlrpc_api" # Hoặc /soap_api
  method: "POST"
  params_in: "body_xml"
  headers: 
    "Content-Type": "application/xml; charset=utf-8"
    "SOAPAction": "http://tempuri.org/IService/GetData" # Ví dụ header cho SOAP
  params_to_test:
    - "USER_ID_PLACEHOLDER"   
    - "SEARCH_TERM_PLACEHOLDER"
  body_template: |
    <?xml version="1.0" encoding="utf-8"?>
    <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
      <soap:Body>
        <GetData xmlns="http://tempuri.org/">
          <userId>USER_ID_PLACEHOLDER</userId>
          <searchTerm>SEARCH_TERM_PLACEHOLDER</searchTerm>
        </GetData>
      </soap:Body>
    </soap:Envelope>

# --- CÁC ĐỊNH NGHĨA BỔ SUNG ĐỂ KIỂM THỬ NÂNG CAO ---

- path: "/api/items/{item_id}/status"
  method: "PATCH"
  params_in: "body_json"
  params_to_test: ["status_name", "audit_log.user"]
  json_template:
    status_name: "Archived"
    notify_users: false
    audit_log:
      user: "system_admin"
      reason: "Item is outdated."


- path: "/api/bulk/create_orders"
  method: "POST"
  params_in: "body_json"
  params_to_test:
    - "customer_id"
    - "items.0.product_id" # Test inject vào trường của object đầu tiên trong mảng
    - "items.1.notes"      # Test inject vào trường của object thứ hai trong mảng
  json_template:
    customer_id: "CUST-789"
    items:
      - product_id: "PROD-001"
        quantity: 2
        notes: "First item note"
      - product_id: "PROD-002"
        quantity: 1
        notes: "Second item note"

# Ví dụ 3: Sử dụng DELETE với request body (một mẫu ít phổ biến nhưng có tồn tại)
- path: "/api/v1/images/bulk-delete"
  method: "DELETE"
  params_in: "body_json"
  params_to_test: ["image_ids.0", "reason"] # Test inject vào mảng ID và trường reason
  json_template:
    image_ids: [101, 102, 103]
    force_delete: false
    reason: "Cleanup of old assets"

# Ví dụ 4: Một endpoint phức tạp hơn với header tùy chỉnh
- path: "/api/internal/run_job"
  method: "POST"
  params_in: "body_json"
  headers:
    "X-Job-Type": "Data-Processing"
    "X-Correlation-ID": "abc-123-def-456"
  params_to_test: ["job_name", "params.query_filter"]
  json_template:
    job_name: "monthly_report"
    params:
      start_date: "2025-01-01"
      end_date: "2025-01-31"
      query_filter: "is_active = true"

- path: "/api/v1/products.php"
  method: "GET"
  params_in: "query"
  params_to_test: ["category"] # Tham số 'category' trên URL có lỗ hổng

- path: "/api/v1/log_event.php"
  method: "POST"
  params_in: "body_json"
  params_to_test: ["user_agent"] # Tham số 'user_agent' trong body JSON có lỗ hổng
  json_template:
    event_message: "User logged in"
    user_agent: "Mozilla/5.0"